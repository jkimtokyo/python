# 리스트는 집합을 위해 만들어졌다. 리스트 만들 때는 대괄호 [] 안에 숫자 가운데 콤마. 리스트는 어떤 자료형도 가질 수 있다 리스트 = 리스트 [ ,[, ,]] 리스트 안에 또 리스트도 가능하다 문자도 가능하다. 물론 빈 []도 가능하다
# 리스트도 문자열처럼 인덱싱과 슬라이싱 다 가능하다.

a = [1,2,3] # for indexing, just a[0]
print(a[0])
print(a[0]+a[2])
print(a[2]-a[0])
print(a[-1]) # 리스트 문자열 모두 인덱스가 -1이면 마지막 요소를 가리킨다.뒤로 세는 것
print(a[-2])
print(a[2]-a[0]*20)

print('')

b = ['list', [1,2,3,4,5,6,7]]
print(b[1]) # 리스트 안에 또 리스트는 그저 하나의 값으로 취급해 버린다. 출력하면 1234567이 모두 출력된다,
print(b[1][0]) # 이렇게 리스트 인덱스를 먼저 그리고 그 안에서의 인덱스를 같이 써주면.. 내부의 항목을 출력한다,
print(b[1][-1])
b = ['list', [1,2,['r','t','zzzz']]]
print(b[1][2][-1])

print('')
# 슬라이싱 - 범위 잡다, 이것도 문자열과 동일하다
c = [1,2,3,4,5,6,7,8]
print(c[0:3])
print(c[6:])
print(c[:6])

c = [1,[4,5,6]]
print(c[1][1:])
print(c[1][3:]) # 값이 없으면 빈 값으로 출력된다.
print(a+b+c)
print(a*3)
#print(c+'h') # 문자열과 숫자열은 더할 수 없다 데이터형을 맞춰줘야 한다
print(str(c[0])+', str()은 실수를 문자열로 변환')

print('')
# 값을 바꿔버리기
a = [1,2,3]
a[1] = 4
b = [1,2,3,4,5,6]
b[2:] = [0,0,0,0]
print(b)

# append
a = [1,2,3]
a.append(4)
print(a)
print('-----------')
a.append([9,7,6])
# a.sort() # 리스트 안의 리스트는 소트 안된다.......
print(a)

print('')
v = [2,3,1,0]
v.sort()
print(v)
x = ['g','h','z','u','d','k','f','n','a','z']
x.sort()
print(x) # 그런데 문자와 실수가 리스트에 같이 들어 있으면 소트 출력 결과 아무것도 내지 못한다....['a','b',1,2]

del(x[2:5])
print(x)

